name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONWARNINGS: ignore::DeprecationWarning
      PIP_NO_DEPENDENCIES: 1
      POETRY_VIRTUALENVS_CREATE: false
      POETRY_HOME: /opt/poetry

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.11"
        architecture: 'x64'
        check-latest: true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          default-libmysqlclient-dev \
          build-essential \
          pkg-config \
          wkhtmltopdf \
          unixodbc-dev \
          libjpeg-dev \
          zlib1g-dev \
          python3-setuptools
    
    - name: Verify Python version and environment
      run: |
        python --version
        which python
        echo "Python location: $(which python)"
        echo "Pip location: $(which pip)"
        python -m pip --version
    
    - name: Setup pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel
        mkdir -p $HOME/.cache/pip
        python -m pip config set global.cache-dir $HOME/.cache/pip
        python -m pip config set global.disable-pip-version-check true
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 -
        ln -s /opt/poetry/bin/poetry /usr/local/bin/poetry
        poetry --version
    
    - name: Install dependencies with Poetry
      run: |
        # Ensure poetry uses the correct Python version
        poetry env use $(which python)
        # Install dependencies with verbose output for debugging
        poetry install --no-interaction --verbose
    
    - name: Verify installations
      run: |
        echo "Checking Flask..."
        python -c "import flask; print(f'Flask version: {flask.__version__}')"
        echo "Checking Pillow..."
        python -c "from PIL import Image; print(f'Pillow version: {Image.__version__}')"
        echo "Checking SQLAlchemy..."
        python -c "import sqlalchemy; print(f'SQLAlchemy version: {sqlalchemy.__version__}')"
    
    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 